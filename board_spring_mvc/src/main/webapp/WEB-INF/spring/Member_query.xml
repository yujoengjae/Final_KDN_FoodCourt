<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
	
<!--여러 도메인을 위한 쿼리 xml를 작성할 때  도메인을 식별하기 위해 
    namespace 부여 
=> sqlSession.쿼리메서드("식별자", paramdata);
    식별자 =>  namespace.id
  ex)sqlSession.selectOne("board.search", paramdata);    
-->	


<mapper namespace="member">
	<select id="search" parameterType="int" resultType="member">
		select *
		from member
		where mno=#{mno}
	</select>
	
	<select id="searchAll" parameterType="pagebean" resultType="member"> <!-- 프로그램에서 리스트로 담아서 리턴 -->
		select * from member
		<where>
			<if test="word != null">
				<choose>
					<when test="key =='mno'">
						mno = #{word}
					</when>
					<when test="key =='email'">
						email like '%'||#{word}||'%'
					</when>
					<when test="key =='mname'">
						mname like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
		order by mno
	</select>
	
	<select id="getCount" parameterType="pagebean" resultType="int"> 
		select count(*) from member
		<where>
			<if test="word != null">
				<choose>
					<when test="key =='mno'">
						mno = #{word}
					</when>
					<when test="key =='email'">
						email like '%'||#{word}||'%'
					</when>
					<when test="key =='mname'">
						mname like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<insert id="insert" parameterType="member">
		insert into member(MNO,GRADE,PASSWORD,MNAME,PHONE,EMAIL,PREFER)
		values(
			#{mno:INTEGER}
			,#{grade:CHAR}
			,#{password:VARCHAR}
			,#{mname:VARCHAR}
			,#{phone:VARCHAR}
			,#{email:VARCHAR}
			,#{prefer:VARCHAR}
		)
	</insert>

	<update id="update" parameterType="member">
		update member set password = #{password:VARCHAR}
						,mname = #{mname:VARCHAR}	
						,email = #{email:VARCHAR}	
						,phone = #{phone:VARCHAR}
						,prefer = #{prefer:VARCHAR}
		where mno=#{mno:INTEGER}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from member
		where mno=#{mno:INTEGER}
	</delete>
	
	
</mapper>